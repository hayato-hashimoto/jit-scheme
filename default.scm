(define namespace-name "meta")
(define meta (current-namespace))

(define library (make-namespace))
(import-namespace-to library namespace-function)
(import-namespace-to library meta)

(select-namespace library)
(internal-define namespace-name "library")
(import-namespace-to (current-namespace) arithmetic)
(import-namespace-to (current-namespace) machine)
(import-namespace-to (current-namespace) builtin)
(import-namespace-to (current-namespace) macro)
(define (cons x y) (ior (* #x10000000 #x1000000) (pair x y)))
(define (atom? x)  (and (* #x10000000 #x1000000) x))
(define (car x) (read (- x 8)))
(define cdr read)
(define (set-car! x val) (write (- x 8) val))
(define set-cdr! write)
(define (tar x) (read (- x 16)))
(define (tbr x) (read (- x 8)))
(define tdr read)
(define last ((fn (self)
  (set! self (fn (lis) (if (atom? (cdr lis)) (car lis) (self (cdr lis)))))
  self)))
(define map ((fn (self)
  (set! self (fn (proc lis) (if (atom? lis) 0 (cons (proc (car lis)) (self proc (cdr lis))))))
  self)))
(define (cadr x)   (car (cdr x)))
(define (caddr x)  (cadr (cdr x)))
(define (cadddr x) (caddr (cdr x)))
(define second cadr)
(define third caddr)
(define forth cadddr)
(define list-ref ((fn (self)
  (set! self (fn (lis index)
    (if (= index 0) (car lis) (self (cdr lis) (- index 1)))))
  self))) 

(select-namespace meta)
(define sdl (make-namespace))
(import-namespace-to sdl namespace-function)
(import-namespace-to sdl meta)

(select-namespace sdl)
(internal-define namespace-name "sdl")
(import-namespace-to (current-namespace) arithmetic)
(import-namespace-to (current-namespace) internal)
(import-namespace-to (current-namespace) machine)
(import-namespace-to (current-namespace) builtin)
(import-namespace-to (current-namespace) library)
(import-namespace-to (current-namespace) macro)
(define dll            (dlopen "libSDL.so"))
(define init           (dlsym dll "SDL_Init"))
(define set-video-mode (dlsym dll "SDL_SetVideoMode"))
(define fill-rect      (dlsym dll "SDL_FillRect"))
(define flip           (dlsym dll "SDL_Flip"))

(select-namespace meta)
(define user (make-namespace))
(import-namespace-to user namespace-function)
(import-namespace-to user meta)

(select-namespace user)
(internal-define namespace-name "user")
(import-namespace-to (current-namespace) arithmetic)
(import-namespace-to (current-namespace) internal)
(import-namespace-to (current-namespace) machine)
(import-namespace-to (current-namespace) builtin)
(import-namespace-to (current-namespace) library)
(import-namespace-to (current-namespace) macro)
